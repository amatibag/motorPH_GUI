/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package motorph_gui;

import java.awt.Toolkit;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JPasswordField;
import motorph_gui.AdminHome;
import motorph_gui.UserHome;

/**
 *
 * @author amatibag
 */
public class LoginPage extends javax.swing.JFrame {

    /**
     * Creates new form LoginPage
     */
    public LoginPage() {
        initComponents();
        setIconImage();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelLogin = new javax.swing.JPanel();
        jlPassword = new javax.swing.JLabel();
        jlUsername = new javax.swing.JLabel();
        jtfUsername = new javax.swing.JTextField();
        jPasswordField = new javax.swing.JPasswordField();
        jToggleButton = new javax.swing.JToggleButton();
        jButtonLogin = new javax.swing.JButton();
        jButtonChange = new javax.swing.JButton();
        bgLoginPage = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("MotorPH Login Page");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panelLogin.setBackground(new java.awt.Color(255, 255, 255));
        panelLogin.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(153, 39, 0), new java.awt.Color(60, 126, 114), new java.awt.Color(255, 175, 0), new java.awt.Color(210, 89, 51)));
        panelLogin.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jlPassword.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        jlPassword.setForeground(new java.awt.Color(210, 89, 51));
        jlPassword.setText("Password");
        panelLogin.add(jlPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, 90, 20));

        jlUsername.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        jlUsername.setForeground(new java.awt.Color(210, 89, 51));
        jlUsername.setText("Username");
        panelLogin.add(jlUsername, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 90, 20));

        jtfUsername.setBackground(new java.awt.Color(255, 245, 206));
        jtfUsername.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jtfUsername.setToolTipText("Enter Username Here");
        jtfUsername.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(255, 175, 0), new java.awt.Color(255, 175, 0)));
        panelLogin.add(jtfUsername, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 18, 170, 25));

        jPasswordField.setBackground(new java.awt.Color(255, 245, 206));
        jPasswordField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jPasswordField.setToolTipText("Enter Your Password Here");
        jPasswordField.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(255, 175, 0), new java.awt.Color(255, 175, 0)));
        panelLogin.add(jPasswordField, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 58, 170, 25));

        jToggleButton.setBackground(new java.awt.Color(255, 245, 206));
        jToggleButton.setFont(new java.awt.Font("Segoe UI", 2, 11)); // NOI18N
        jToggleButton.setText("Show Pasword");
        jToggleButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(210, 89, 51), new java.awt.Color(210, 89, 51), new java.awt.Color(60, 126, 114), new java.awt.Color(60, 126, 114)));
        jToggleButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jToggleButtonMouseClicked(evt);
            }
        });
        jToggleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButtonActionPerformed(evt);
            }
        });
        panelLogin.add(jToggleButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 90, 110, -1));

        jButtonLogin.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButtonLogin.setText("Login");
        jButtonLogin.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(60, 126, 114), new java.awt.Color(60, 126, 114)));
        jButtonLogin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonLoginMouseClicked(evt);
            }
        });
        jButtonLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLoginActionPerformed(evt);
            }
        });
        panelLogin.add(jButtonLogin, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 135, 110, 23));

        jButtonChange.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButtonChange.setText("Change Password");
        jButtonChange.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(210, 89, 51), new java.awt.Color(210, 89, 51)));
        jButtonChange.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonChangeMouseClicked(evt);
            }
        });
        jButtonChange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonChangeActionPerformed(evt);
            }
        });
        panelLogin.add(jButtonChange, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 135, 110, 23));

        getContentPane().add(panelLogin, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 270, 310, 170));

        bgLoginPage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/motorph_gui/LoginPage.jpg"))); // NOI18N
        getContentPane().add(bgLoginPage, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLoginActionPerformed
            String username = jtfUsername.getText().toLowerCase();
            String password = new String(jPasswordField.getPassword());

            boolean found = false;
            try (BufferedReader br = new BufferedReader(new FileReader("password.csv"))) {
                String line;
                while ((line = br.readLine()) != null) {
                    String[] data = line.split(",");
                    if (data.length >= 3) {  // Ensure there are enough columns
                        String empNumber = data[0];
                        String csvUsername = data[1];
                        String csvPassword = data[2];

                        if (username.equals(csvUsername) && password.equals(csvPassword)) {
                            found = true;
                            if ("0".equals(empNumber)) {
                                new AdminHome(username).setVisible(true);
                            } else {
                                new UserHome(username, empNumber).setVisible(true);
                            }
                            dispose();  // Close the login frame
                            break;
                        }
                    }
                }
            } catch (IOException e) {
                e.printStackTrace();
            }

            if (!found) {
                JOptionPane.showMessageDialog(this, "Incorrect username or password.", "Login Error", JOptionPane.ERROR_MESSAGE);
            }
    }//GEN-LAST:event_jButtonLoginActionPerformed

    private void jButtonLoginMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonLoginMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonLoginMouseClicked

    private void jButtonChangeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonChangeMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonChangeMouseClicked

    private void jToggleButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jToggleButtonMouseClicked
        if (jToggleButton.isSelected()) {
        jPasswordField.setEchoChar((char) 0); // Show password
        jToggleButton.setText("Hide Password");
        } else {
            jPasswordField.setEchoChar('\u2022'); // Hide password
            jToggleButton.setText("Show Password");
        }
    }//GEN-LAST:event_jToggleButtonMouseClicked

    private void jButtonChangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonChangeActionPerformed
        String username = jtfUsername.getText().toLowerCase();  // Convert input username to lowercase
    String password = new String(jPasswordField.getPassword());

    boolean found = false;
    List<String[]> allUsers = new ArrayList<>();

    try (BufferedReader br = new BufferedReader(new FileReader("password.csv"))) {
        String line;
        while ((line = br.readLine()) != null) {
            String[] data = line.split(",");
            String csvUsername = data[1].toLowerCase();  // Convert CSV username to lowercase
            String csvPassword = data[2];

            if (username.equals(csvUsername) && password.equals(csvPassword)) {
                found = true;
                // Prompt for new password
                JPasswordField pf1 = new JPasswordField();
                JPasswordField pf2 = new JPasswordField();
                Object[] message = {
                    "Enter new password:", pf1,
                    "Confirm new password:", pf2
                };

                int option = JOptionPane.showConfirmDialog(this, message, "Change Password", JOptionPane.OK_CANCEL_OPTION);
                if (option == JOptionPane.OK_OPTION) {
                    String newPassword1 = new String(pf1.getPassword());
                    String newPassword2 = new String(pf2.getPassword());

                    if (!newPassword1.equals(newPassword2)) {
                        JOptionPane.showMessageDialog(this, "Passwords do not match.", "Change Password Error", JOptionPane.ERROR_MESSAGE);
                        return;
                    }

                    if (!isValidPassword(newPassword1)) {
                        JOptionPane.showMessageDialog(this, "Password must be at least 8 characters long and include a combination of upper case, lower case, and numbers.", "Change Password Error", JOptionPane.ERROR_MESSAGE);
                        return;
                    }

                    // Update the password in the CSV data
                    data[2] = newPassword1;
                }
            }
            allUsers.add(data);  // Add all users (including updated one) to list
        }
    } catch (IOException e) {
        e.printStackTrace();
    }

    if (!found) {
        JOptionPane.showMessageDialog(this, "Incorrect username or password.", "Change Password Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Write all users back to the CSV file
    try (BufferedWriter bw = new BufferedWriter(new FileWriter("password.csv"))) {
        for (String[] user : allUsers) {
            bw.write(String.join(",", user));
            bw.newLine();
        }
    } catch (IOException e) {
        e.printStackTrace();
    }

    JOptionPane.showMessageDialog(this, "Password successfully changed.", "Change Password", JOptionPane.INFORMATION_MESSAGE);
}

private boolean isValidPassword(String password) {
    if (password.length() < 8) {
        return false;
    }
    boolean hasUpper = false;
    boolean hasLower = false;
    boolean hasDigit = false;
    for (char c : password.toCharArray()) {
        if (Character.isUpperCase(c)) {
            hasUpper = true;
        } else if (Character.isLowerCase(c)) {
            hasLower = true;
        } else if (Character.isDigit(c)) {
            hasDigit = true;
        }
    }
    return hasUpper && hasLower && hasDigit;
   
    }//GEN-LAST:event_jButtonChangeActionPerformed

    private void jToggleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jToggleButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoginPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoginPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoginPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoginPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LoginPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel bgLoginPage;
    private javax.swing.JButton jButtonChange;
    private javax.swing.JButton jButtonLogin;
    private javax.swing.JPasswordField jPasswordField;
    private javax.swing.JToggleButton jToggleButton;
    private javax.swing.JLabel jlPassword;
    private javax.swing.JLabel jlUsername;
    private javax.swing.JTextField jtfUsername;
    private javax.swing.JPanel panelLogin;
    // End of variables declaration//GEN-END:variables

    private void setIconImage() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("Logo.jpg")));
    }
}
